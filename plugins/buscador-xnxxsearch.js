const axios = require('axios');

async function handler(conn, { message, args }) {
    const query = args.join(' ');
    if (!query) {
        return conn.sendMessage(message.key.remoteJid, {
            text: '*üîû ¬°Zenitsu necesita saber qu√© buscar!* üò≥\n\n> Ejemplo: `xnxx bokep` üí¶',
        });
    }

    try {
        const searchUrl = `https://api.vreden.my.id/api/xnxxsearch?query=${encodeURIComponent(query)}`;
        const searchResponse = await axios.get(searchUrl);

        if (searchResponse.data && searchResponse.data.result && searchResponse.data.result.length > 0) {
            const results = searchResponse.data.result.slice(0, 10);

            let listText = '‚ï≠‚îÄ„Äå üîû ùôïùôÄùôâùôÑùôèùôéùôê ùòΩùôäùôè - ùôçùôÄùôéùôêùôáùôèùòºùòøùôäùôé „Äç‚îÄ‚ïÆ\n';
            results.forEach((vid, i) => {
                const infoParts = vid.info.trim().split('\n').join(' ').split(' - ');
                const viewsAndLikes = infoParts[0]?.trim() || 'N/A';
                const duration = infoParts[1]?.trim() || 'N/A';

                listText += `\n${i + 1}. üé¨ *${vid.title}*\n   ‚è≥ Duraci√≥n: ${duration}\n   üëÄ Vistas: ${viewsAndLikes}\n   üîó ${vid.link}\n`;
            });
            listText += '\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ';

            await conn.sendMessage(message.key.remoteJid, { text: listText });
        } else {
            await conn.sendMessage(message.key.remoteJid, {
                text: '*üîç Zenitsu no encontr√≥ resultados...*\n\n> Intenta con otro t√©rmino, por favor.',
            });
        }
    } catch (err) {
        console.error(err);
        await conn.sendMessage(message.key.remoteJid, {
            text: '*‚ùå ¬°Algo sali√≥ mal!*\n\n> Zenitsu se tropez√≥ buscando... vuelve a intentarlo m√°s tarde.',
        });
    }
}

module.exports = {
    command: 'xnxx',
    handler,
};