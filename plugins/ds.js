const fs = require('fs');
const path = require('path');
const { ownerid, botname } = require('../settings');

module.exports = {
    command: 'ds',
    handler: async (conn, { message }) => {
        const from = message.key.remoteJid;
        const sender = message.key.participant || from;

        if (sender !== ownerid) {
            return await conn.sendMessage(from, {
                text: `*ğŸ˜¤ Â¡Alto ahÃ­!*\n\n> Solo el *gran maestro* de ${botname} puede usar este comando... Zenitsu estÃ¡ vigilando ğŸ‘€`,
            });
        }

        try {
            const sessionsPath = path.resolve(__dirname, '../sessions');

            if (!fs.existsSync(sessionsPath)) {
                return await conn.sendMessage(from, {
                    text: '*ğŸ˜° Â¡No encuentro la carpeta de sesiones!*\n\n> Zenitsu estÃ¡ entrando en pÃ¡nico... Â¿seguro que existe?',
                });
            }

            const files = fs.readdirSync(sessionsPath);
            const unnecessaryFiles = files.filter((file) => file !== 'creds.json');

            if (unnecessaryFiles.length === 0) {
                return await conn.sendMessage(from, {
                    text: '*âœ… Todo estÃ¡ limpio, como el corazÃ³n de Zenitsu.*\n\n> No hay archivos innecesarios que eliminar.',
                });
            }

            unnecessaryFiles.forEach((file) => {
                fs.unlinkSync(path.join(sessionsPath, file));
            });

            await conn.sendMessage(from, {
                text: `*ğŸ§¹ Zenitsu eliminÃ³ las sesiones con valentÃ­a:*\n${unnecessaryFiles.map(file => `âš¡ ${file}`).join('\n')}\n\n> Â¡${botname} estÃ¡ listo para brillar otra vez! âœ¨`,
            });

            await conn.sendMessage(from, {
                text: '*ğŸ˜³ Â¿Eh? Â¿Me estÃ¡s viendo? Â¡No me mires tanto!*',
            });
        } catch (err) {
            await conn.sendMessage(from, {
                text: '*ğŸ’¥ Â¡Algo saliÃ³ mal!*\n\n> Zenitsu se tropezÃ³ mientras borraba las sesiones... intenta de nuevo mÃ¡s tarde.',
            });
        }
    },
};